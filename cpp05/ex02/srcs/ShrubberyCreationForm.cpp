/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ldinaut <ldinaut@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/11/02 18:35:15 by ldinaut           #+#    #+#             */
/*   Updated: 2022/11/03 13:27:34 by ldinaut          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ShrubberyCreationForm.hpp"
#include "Bureaucrat.hpp"

ShrubberyCreationForm::ShrubberyCreationForm(Bureaucrat &buro) : Form("ShrubberyCreationForm", 145, 137), _target(buro)
{
}

ShrubberyCreationForm::~ShrubberyCreationForm()
{

}

ShrubberyCreationForm::ShrubberyCreationForm(ShrubberyCreationForm const &copy) : Form(copy), _target(copy._target)
{
	*this = copy;
}

ShrubberyCreationForm &ShrubberyCreationForm::operator=(ShrubberyCreationForm const &egal)
{
	this->_isSigned = egal._isSigned;
	return (*this);
}

void	ShrubberyCreationForm::execute(Bureaucrat const &executor)
{
	if (executor.getGrade() > _execGrade)
		throw (GradeTooHighException());

	std::ofstream	outfile;
	std::string		file = _target.getName() + "_shrubbery";
	
	outfile.open(file.c_str());
	if (!outfile.is_open())
	{
		std::cout << "failed open file" << std::endl;
		return ;
	}
	outfile << "///////**/////////////////////////////////////////////////////////////\n";
	outfile << "///////*/////**///////////////////(((////////////////,        ..     ,\n";
	outfile << "////,,,,,,,///////////////(###//#*****/###(///////////                \n";
	outfile << "////,#/,,#(*////////////((******************//(///(#/###(/.           \n";
	outfile << ",////,,,,,///////(##((#(#**********************#(********/(//////,....\n";
	outfile << "//////////,/////#************,****,,***,*******************#//////////\n";
	outfile << "///////////////(#*********.,.,*,,.,***,********************#//////////\n";
	outfile << "///////////////(/********,...,,*,.,*****.(*****************#//////////\n";
	outfile << "///////////////((**********((,,(****//(((*****************(///////////\n";
	outfile << "/////////////////#*********(%((#*************************#(///////////\n";
	outfile << "//////////////////#(********///**************,,***,,,(***///(#////////\n";
	outfile << "////////////////(##(************************,.*.*,**.*#*******/(//////\n";
	outfile << "///////////////(******************************,,,****(,,*,******#/////\n";
	outfile << "//////////////#**************************(**#/***#*/%#%*,,,******((///\n";
	outfile << "//////////////#**************************(#(********%%%****.*******(//\n";
	outfile << "///////////////#/**********#*******.,,,..*************,,,**********(//\n";
	outfile << "///////////////////###(///#*******,.***,*.*****/******************#///\n";
	outfile << "/////////////////////////#***********,,*,*****/((***************/(////\n";
	outfile << "/////////////////////////(#*****************/#///#(//********/(#//////\n";
	outfile << "////////////////////////////(#/************#(/////////(/////*/////////\n";
	outfile << "//////////////////////(%%(((///////(########(/////////////////////////\n";
	outfile << "////////////            %%%%%#/////////#####(/////////////////////////\n";
	outfile << "/////////,               */////,*//////(####(/(///////////////////////\n";
	outfile << "/////////.               */((.*,*/////(######/*/*,///////////////((//\n";
	outfile << "//////////          ,  /...,,,,*,.,.,.###%%##.....,*//////////*,/,/*//\n";
	outfile << "/////*.,,,..#..**,../%.(#**,**.,,,.,(###%&%##,..,.,,.*.,///*//*,,*,,,.\n";
	outfile << "//****,***,.,,*..*,*.*,**,*,,,,**.*####/##//%#*,,*.,,,*,.*,,.,..,,,,*,\n";
	outfile << "*,,.*,**,,.,.,.,.,*.*,*,***,,,,,,####/#/#(/((###,.***,**,.,*..**,*,,,,\n";
	outfile.close();
}